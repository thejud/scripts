#!/usr/bin/env python3

"""Present a fuzzy picklist of files in the Downloads directory for editing."""

import os
import subprocess
from pathlib import Path
from datetime import datetime


def get_downloads_directory():
    """Return the path to the user's Downloads directory."""
    return Path.home() / "Downloads"


def list_files(downloads_path):
    """Return a list of files in the downloads directory with details."""
    files = []
    for file in downloads_path.iterdir():
        if file.is_file():
            stat = file.stat()
            files.append((file.name, stat.st_mtime, stat.st_size))
    files.sort(
        key=lambda x: x[1], reverse=True
    )  # Sort by modification time, descending
    return files


def format_file_list(files):
    """Format the list of files with details for display."""
    formatted_list = []
    for file, mtime, size in files:
        human_readable_time = datetime.fromtimestamp(mtime).strftime(
            "%Y-%m-%d %H:%M:%S"
        )
        formatted_list.append(f"{file:40} [{human_readable_time:20} {size:10} bytes]")
    return "\n".join(formatted_list)


def main():
    downloads_path = get_downloads_directory()
    files = list_files(downloads_path)
    if not files:
        print("No files found in Downloads directory.")
        return

    formatted_list = format_file_list(files)

    # Run fzf to select one or more files
    try:
        result = subprocess.run(
            ["fzf", "--multi"],
            input=formatted_list,
            text=True,
            capture_output=True,
            check=True,
        )
    except subprocess.CalledProcessError:
        print("No file selected.")
        return

    # Extract the filenames from the selection
    selected_lines = result.stdout.strip().splitlines()
    if not selected_lines:
        print("No file selected.")
        return

    selected_filenames = []
    for line in selected_lines:
        filename = line.split(" [")[0].strip()
        selected_filenames.append(str(downloads_path / filename))

    # Execute the editor with the selected files
    editor = os.getenv("EDITOR", "vi")
    subprocess.run([editor] + selected_filenames)


if __name__ == "__main__":
    main()

